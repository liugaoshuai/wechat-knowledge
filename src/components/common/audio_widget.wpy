<template>
  <view class="audio-page {{(!wrap && animateStart) ? 'show-page' : ''}} {{(wrap && animateStart) ? 'hide-page' : ''}}">
    <image class="course-img" src="/images/svg/audio.svg"/>
    <text>课程标题课程标题课程标题课程标题课程标题</text>
    <view class="section section_gap">
      <view class="slider-bar">
        <slider block-size="12" @change="audioSeek" min="0" max="{{duration}}" value="{{current}}"/>
        {{currentTime}}  {{durationTime}}
      </view>
    </view>
    <view class="control-bar">
      <button type="primary" @tap="audioPrev">></button>
      <button type="primary" @tap="pauseOrplay">||</button>
      <button type="primary" @tap="switchWrap">></button>
    </view>
  </view> 
  <view class="audio-controler row" @tap="switchWrap"> 
    <!--左边栏-->
    <view class="left-bar row-around">
      <view class="icon-close column-center" wx:if="{{paused}}">
        <i class="iconfont iconfont-close"></i>
      </view>
      <image class="goods-image"  lazy-load src="{{playDetail.coverImgUrl}}" ></image>
      <view class="column" style="width:{{paused ? '336rpx' : '392rpx'}}">
        <text class="nm white line1 ">恋爱读心术，读懂他的心读懂他的心当成</text>
        <text class="xs white line1">{{durationTime}}</text>
      </view>
    </view>
    <!--右边栏-->
    <view class="right-bar row-around">
      <view class="icon-play column-center" @tap.stop="pauseOrplay">
        <i class="iconfont {{paused ? 'iconfont-play' : 'iconfont-stop'}}"></i>
      </view>
      <view class="icon-next column-center">
        <i class="iconfont iconfont-next"></i>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import play from '../../api/play';
  export default class AudioWidget extends wepy.component {
    props = {
      isWrap: {
        default: true,
        twoWay: true
      }
    }
    data = {
      playDetail: {
        title: '此时此刻',
        src: 'http://ws.stream.qqmusic.qq.com/M500001VfvsJ21xFqb.mp3?guid=ffffffff82def4af4b12b3cd9337d5e7&uin=346897220&vkey=6292F51E1E384E061FF02C31F716658E5C81F5594D561F2E88B854E81CAAB7806D5E4F103E55D33C16F3FAC506D1AB172DE8600B37E43FAD&fromtag=46',
        coverImgUrl: 'http://y.gtimg.cn/music/photo_new/T002R300x300M000003rsKF44GyaSk.jpg?max_age=2592000',
        singer: '许巍',
        epname: '此时此刻'
      },
      duration: 0,
      current: 0,
      paused: false,
      wrap: true,
      animateStart: false
    }
    async onLoad() {
      await this.audioInit(this.playDetail);
    }
    /**
     * 初始化播放器
     */
    async audioInit(playDetail) {
      let bgAudio = null;
      if (wepy.$instance.globalData.bgAudio) {
         bgAudio = wepy.$instance.globalData.bgAudio;
         console.log('local')
      } else {
        bgAudio = wepy.getBackgroundAudioManager();
        Object.assign(bgAudio, playDetail);
        wepy.$instance.globalData.bgAudio = bgAudio;
        console.log('new')
      }
      this.bgAudio = bgAudio;
      bgAudio.onTimeUpdate(res => {
        this.duration = Math.ceil(bgAudio.duration)
        this.current = Math.ceil(bgAudio.currentTime)
        this.$apply()
      });
      bgAudio.onEnded(res => {
        this.audioInit(this.playDetail);
      })
      console.log(1)
    }
    methods = {
      pauseOrplay() {
        this.paused ? this.bgAudio.play() : this.bgAudio.pause();
        this.paused = !this.paused;
      },
      audioSeek(e) {
        this.bgAudio.seek(e.detail.value)
      },
      switchWrap() {
        let that = this;
        this.animateStart = true;
        this.wrap = !this.wrap;
        setTimeout(() => {
          that.isWrap = that.wrap;
          that.$apply();
        }, that.wrap ? 0 : 1000)
      }
    };
    computed = {
      currentTime() {
        return play.fmtTime(this.current);
      },
      durationTime() {
        return play.fmtTime(this.duration);
      }
    }
    mixins = []
    events = {}
    components = {}
  }
</script>

<style lang="less">
  @import "../../styles/variable";
  // 播放详情页
  @keyframes showPage {
    0% {
      top: 200%;
    }
    100% {
      top: 0;
    }
  }
  @keyframes hidePage {
    0% {
      top: 0;
    }
    100% {
      top: 200%;
    }
  }
  .show-page {
    animation: showPage 1s forwards;
  }
  .hide-page{
    animation: hidePage 1s forwards;
  }
  .audio-page{
    position: fixed;
    top: 200%;
    left: 0;
    z-index: 10;
    background: white;
    height: 100%;
    .course-img{
      width: 750rpx;
      height: 400rpx;
    }
    text{
      display:block;
      text-align: center;
    }
    .control-bar{
      display: flex;
      justify-content: space-around;
    }
  }
  
  // 播放控制栏
  .audio-controler{
    @size: 114rpx;
    width: 700rpx;
    height: 114rpx;
    background: #828282;
    border-radius: 15rpx;
    position: fixed;
    left: 25rpx;
    bottom: 24rpx;
    height: @size;
    z-index: 20;
    .left-bar{
      width: 500rpx;
      height: @size;
      .icon-close{
        width: 46rpx;
        height: 46rpx;
        .iconfont{
          color: white;
          font-size: 46rpx;
        }
      }
      .goods-image {
        width: 76rpx;
        height: 96rpx;
        border-radius: 4rpx;
      }
    }
    .right-bar{
      width: 180rpx;
      height: @size;
      .icon-play{
        width: 60rpx;
        height: 60rpx;
        border-radius: 50%;
        border: @border;
        .iconfont{
          color: white;
          font-size: 26rpx;
        }
      }
      .icon-next{
        width: 46rpx;
        height: 46rpx;
        .iconfont{
          color: white;
          font-size: 32rpx;
        }
      }
    }
  }
</style>
