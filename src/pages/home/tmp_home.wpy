<template>
  <view class="template-box" wx:if="{{init}}">
    <repeat for="{{components}}" key="index" index="index" item="item">
      <!--顶部标题-->
      <block wx:if="{{item.componentType == 'Title'}}">
        <TitleBar :param.sync="item" />
      </block>

      <!--轮播图-->
      <block wx:if="{{item.componentType == 'SWIPER'}}">
        <SwiperBar :param.sync="item" />
      </block>

      <!--商品组-->
      <block wx:if="{{item.componentType == 'GOODS_BOX'}}">
        <GoodsBox :param.sync="item" />
      </block>
    </repeat>

  </view>
  <!--插件-->
  <AudioWidget wx:if="{{showAudio}}"/>
</template>

<script>
  import auth from '../../api/auth';
  import config from '../../api/config';
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import Loading from '../../components/common/loading';
  import SwiperBar from '../../components/template/swiper_bar';
  import TitleBar from '../../components/template/title_bar';
  import GoodsBox from '../../components/template/goods_box';
  import AudioWidget from '../../components/common/audio_widget';
  export default class HomeTemplate extends wepy.page {
    data = {
      init: false,
      components: []
    };
    async onLoad () {
      // 登录检查
      // await auth.login();
      await this.renderTemplatePage();
      this.loaded();
      // 渲染导航栏
      this.renderNavigationBar();
    };
    onShow() {
      if (wepy.$instance.globalData.audioData) this.reLoad()
    };
    reLoad() {
      this.$invoke('AudioWidget', 'audioInit');
    };
    /**
     * 渲染页面
     */
    async renderTemplatePage() {
      const layout = await config.layout('wx67c98c6a669003c4');
      let page = [];
      for (let i = 0;i < JSON.parse(layout.componentSections).length; i++) {
        let item = JSON.parse(layout.componentSections)[i]
        page[i] = await config.component(item.componentType, item.componentId);
      }
      // Promise.all(JSON.parse(layout.componentSections).map((item, index) =>  config.component(page, index, item.floorType, item.componentId)))
      let processData = config.processPage(layout, page)
      this.params = processData.params;
      this.components = processData.components;
      console.info(`[template] render template page success`);
    }
    /**
     * 渲染标题栏
     */
    renderNavigationBar() {
      if (this.params.navigation == null) {
        return;
      }
      const {pageTitle, backgroundColor} = this.params.navigation;
      if (pageTitle) {
        wepy.setNavigationBarTitle({
          title: pageTitle
        });
      }
      if (backgroundColor) {
        wepy.setNavigationBarColor({
          backgroundColor: backgroundColor
        });
      }
    }
    // 下拉刷新
    async onPullDownRefresh() {
      await this.renderTemplatePage();
      this.loaded();
      // 渲染导航栏
      this.renderNavigationBar();
      wepy.stopPullDownRefresh();
    }
    methods = {};
    components = {
      Loading: Loading,
      SwiperBar: SwiperBar,
      TitleBar: TitleBar,
      GoodsBox: GoodsBox,
      AudioWidget: AudioWidget
    };
    computed = {
      showAudio() {
        if (wepy.$instance.globalData.audioData) {
          return wepy.$instance.globalData.audioData.showAudio
        } else {
          return false
        }
      }
    };
    mixins = [base];
    events = {
      'reload': async() => {
        await this.renderTemplatePage();
        this.loaded();
        // 渲染导航栏
        this.renderNavigationBar();
        wepy.stopPullDownRefresh();
      }
    }
    config = {
      enablePullDownRefresh: true
    }
  }
</script>

<style lang="less">
  @import "../../styles/variable";
  .template-box{
    width: 100%;
    overflow-x: hidden;
    .h-gap {
      width: 100%;
      height: 1px;
      background-color: @color-border;
    }
  }
  .template-widget{
    width: 100%;
    height: 100%;
  }

</style>
        
